- 2 podejscia:
	- detekcja + klasyfikacja
	- detekcja i klasyfikacja w jednym
- pobranie bazy danych
- próba rozpoznawania za pomocą tensorflow/pytorch -> słabe wyniki 			|2 tygodnie
- dojście do wniosku że baza danych jest mała 
- próba detekcji yolo -> bardzo dobre wyniki 						|
- stworzenie klasyfikacji -> nieudane							|
- przeczytanie o problemie z łączeniem sieci neuronowych ze względu na dodatkowe	|
  wycinanie z obrazku (obnizenie sprawności w przypadku real-time):			|2 tygodnie
   https://github.com/ultralytics/ultralytics/issues/8037
- zapoznanie się z pobranią bazą danych i sprawdzenie template-u bazy danych yolo:
   https://docs.ultralytics.com/datasets/detect/
- edycja pobranej bazy danych 								| 1 tydzien
- stworzenie sieci detekcji i klasyfickacji w jednym
- udane próby i działanie 
- stworzenie aplikacji na telefon:
	- próba wgrania programu python na telefon (od razu odrzucanie dostępu do 	|
	czegokolwiek ze względu na brak root user(testowanie na IOS swoim telefonie))	|
	- próba postawienia konteneru (niemozliwość otworznie plików ze względu		|
	na zabezpieczenia telefonu, brak root usera, niemożliwość zmiany działania tele)|
	- podejście na postawieniu konteneru na komputerze i przesył danych przez 	|
	ingress port (za długi czas oczekiwania, nie satysfakcjonujące)			|4 tygodnie
- działajace rozwiązania aplikacji (nie zrealizowane, ale potwierdzono działanie):	
	- uruchomienie skryptu za pomocą aplikacji "python editor"			|
	- wgranie wag na telefon, a następnie stworzenie programu w Xcode 		|
	(dedykowanemu oprogramowaniu apple)						|2 tygodnie

!! do stworzenia datasetu polecam: https://app.roboflow.com/annotate